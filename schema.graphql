# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

enum TxStatus {
  Success
  Error
}

type EventAttribute @entity {
  id: ID!
  key: String!
  value: String!
  event: Event!
}

type Block @entity {
  id: ID! # The block header hash
  chainId: String! @index
  height: BigInt! @index
  timestamp: Date!
  transactions: [Transaction] @derivedFrom(field: "block")
  messages: [Message] @derivedFrom(field: "block")
  events: [Event] @derivedFrom(field: "block")
  balancesOfAccountByDenom: [Balance] @derivedFrom(field: "lastUpdatedBlock")
}

type Transaction @entity {
  id: ID!
  block: Block!
  gasUsed: BigInt!
  gasWanted: BigInt!
  fees: [Coin]!
  memo: String
  status: TxStatus!
  log: String
  timeoutHeight: BigInt @index
  # NB: only the first signer!
  signerAddress: String @index
  messages: [Message] @derivedFrom(field: "transaction")
}

type Message @entity {
  id: ID!
  typeUrl: String! @index
  json: String
  transaction: Transaction!
  block: Block!
}

type Event @entity {
  id: ID!
  type: String! @index
  attributes: [EventAttribute]! @derivedFrom(field: "event")
  transaction: Transaction
  block: Block!
}

type Coin @jsonField {
  denom: String!
  amount: String!
}

type NativeTransfer @entity {
  id: ID!
  toAddress: String! @index
  fromAddress: String! @index
  amounts: [Coin]!
  denom: String! @index
  message: Message!
  transaction: Transaction!
  block: Block!
}

type Account @entity {
  # id is the address
  id: ID!
  chainId: String! @index
  nativeBalanceChanges: [NativeBalanceChange]! @derivedFrom(field: "account")
  genesisBalances: [GenesisBalance] @derivedFrom(field: "account")
  balances: [Balance] @derivedFrom(field: "account")
}

type GenesisBalance @entity {
  id: ID!
  amount: BigInt!
  denom: String! @index
  account: Account!
}

type NativeBalanceChange @entity {
  id: ID!
  balanceOffset: BigInt!
  denom: String! @index
  account: Account!
  event: Event!
  transaction: Transaction
  block: Block!
}

type UnprocessedEntity @entity {
  id: ID!
  error: String!
  event: Event
  message: Message
  transaction: Transaction
  block: Block
}

type Balance @entity {
  id: ID!
  account: Account! @index
  denom: String! @index
  amount: BigInt!
  lastUpdatedBlock: Block!
}

type GenesisFile @entity {
  # id is the initial height
  id: ID!
  raw: String!
}
