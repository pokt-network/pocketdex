#!/bin/sh

set -e

DIR="$(dirname "$0")"
if [ ! -d "$DIR" ]; then
  DIR="$PWD"
fi
DIR="$(cd "$DIR" && pwd)"

. ${DIR}/shared.sh

if ! command -v ignite >/dev/null 2>&1; then
  error_log "Ignite is not installed. Please install it at: https://docs.ignite.com/welcome/install."
  exit 1
fi

# Create a temp directory to clone poktroll into
WORK_DIR=$(mktemp -d -p "${DIR}")
# Normalize WORK_DIR to absolute path
WORK_DIR=$(cd "$WORK_DIR" && pwd)

if [ -z "$WORK_DIR" ]; then
  echo "Could not create temp dir"
  exit 1
fi

echo "Working in $WORK_DIR"

cleanup() {
  info_log "Cleaning up..."
  rm -rf "$WORK_DIR"
  info_log "Cleanup done. Poktroll directory was deleted."
}

# Remove the temp directory on exit
trap cleanup EXIT

default_branch="main"
branch=${1:-$default_branch}

cd ${WORK_DIR}

info_log "Cloning Poktroll from github.com/pokt-network/poktroll..."
git clone https://github.com/pokt-network/poktroll.git

info_log "Poktroll from github.com/pokt-network/poktroll was cloned."
cd poktroll

if [ "$branch" != "$default_branch" ]; then
  info_log "Checking out $branch branch in Poktroll repository..."
  git checkout $branch
fi

info_log "Generating TypeScript client files..."
echo "Y" | ignite generate ts-client --yes --use-cache

info_log "TypeScript client files were generated. Now copying them to the project..."
cd ${WORK_DIR}
# Deleting old TypeScript client files.
rm -rf ${DIR}/../src/client/*

# Here we are copying the files from poktroll.application because every directory has the types directory with the same files inside generated by ignite.
cp -TR poktroll/ts-client/poktroll.application/types ${DIR}/../src/client
rm -f ${DIR}/../src/client/route-name.eta

info_log "TypeScript client files were copied. Now copying proto files..."

# Deleting old protobuf source files.
rm -rf ${DIR}/../proto/poktroll/*
cp -TR poktroll/proto/poktroll/ ${DIR}/../proto/poktroll

info_log "Proto files were copied."

